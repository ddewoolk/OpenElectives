<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Jackson for JSON Mapping -->
	<beans:bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />

	<context:component-scan base-package="ca.ryerson.electives" />

	<!-- declare beans -->
	<beans:bean id="courseDao" class="ca.ryerson.electives.dao.CourseDaoImpl" />
	<beans:bean id="courseService"
		class="ca.ryerson.electives.services.CourseServiceImpl" />

	<beans:bean id="subcategoryDao" class="ca.ryerson.electives.dao.SubCategoryDaoImpl" />
	<beans:bean id="subcategoryService"
		class="ca.ryerson.electives.services.SubCategoryServiceImpl" />

	<beans:bean id="themeDao" class="ca.ryerson.electives.dao.ThemeDaoImpl" />
	<beans:bean id="themeService"
		class="ca.ryerson.electives.services.ThemeServiceImpl" />

	<beans:bean id="categoryDao" class="ca.ryerson.electives.dao.CategoryDaoImpl" />
	<beans:bean id="categoryService"
		class="ca.ryerson.electives.services.CategoryServiceImpl" />

	<beans:bean id="electiveHierarchyDao"
		class="ca.ryerson.electives.dao.ElectiveHierarchyDaoImpl" />
	<beans:bean id="electiveHierarchyService"
		class="ca.ryerson.electives.services.ElectiveHierarchyServiceImpl" />

	<beans:bean id="semesterDao" class="ca.ryerson.electives.dao.SemesterDaoImpl" />
	<beans:bean id="semesterService"
		class="ca.ryerson.electives.services.SemesterServiceImpl" />


	<!-- declare H2 datasource bean -->
	<!-- <beans:bean id="dataSource" -->
	<!-- class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<!-- <beans:property name="driverClassName" value="org.h2.Driver" /> -->
	<!-- <beans:property name="url" value="jdbc:h2:/data/test" /> -->
	<!-- <beans:property name="username" value="sa" /> -->
	<!-- <beans:property name="password" value="" /> -->
	<!--</beans:bean> -->

	<!-- declare Oracle datasource bean -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver " />
		  <!--  <beans:property name="url"-->
		 	<!--   value="jdbc:oracle:thin:CommunitySvcs/Password1@localhost:1521/socialwk" />-->
		   <beans:property name="url"
		 value="jdbc:oracle:thin:communitysvcs/fc00bc1@oracollab.semiprodint.ryerson.ca:1521:CFTEST" />
	</beans:bean>


</beans:beans>
